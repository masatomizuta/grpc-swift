%YAML 1.2
--- |
  #!/bin/sh
  #
  # This file has been automatically generated from a template file.
  # Please make modifications to `templates/swiftgrpc-vendoring.sh.template`
  # instead. This file can be regenerated from the template by running
  # `tools/buildgen/generate_projects.sh`.
  #
  #
  # Copyright 2017, gRPC Authors All rights reserved.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  #
  # This script vendors the gRPC Core library into the
  # CgRPC module in a form suitable for building with
  # the Swift Package Manager.
  #

  <%
  lib_maps = {lib.name: lib for lib in libs}

  def ruby_multiline_list(files, indent):
    return (',\n' + indent*' ').join('\'%s\'' % f for f in files)

  def lib_and_transitive_deps(lib):
    return list(sorted(set({lib} | set(lib_maps[lib].transitive_deps))))

  def list_lib_files(lib, fields):
    files = set()
    for lib_name in lib_and_transitive_deps(lib):
      lib = lib_maps[lib_name]
      for field in fields:
        files.update(lib.get(field, []))
    return list(sorted(files))

  grpc_private_files = list_lib_files("grpc", ("headers", "src"))
  grpc_public_headers = list_lib_files("grpc", ("public_headers",))
  grpc_private_headers = list_lib_files("grpc", ("headers",))

  def sh_multiline_list(files, indent):
    return ('\n' + indent*' ').join('\'%s\'' % f for f in files)
  %>
  public_headers=(${sh_multiline_list(grpc_public_headers, 2)})

  source_files=(${sh_multiline_list(grpc_private_files, 2)})

  private_headers=(${sh_multiline_list(grpc_private_headers, 2)})

